CREATE TABLE retail_sales
(transactions_id INT ,
sale_date DATE	,
sale_time TIME ,
customer_id INT,
gender VARCHAR(15),

age INT,
category VARCHAR(15),
quantity INT,
price_per_unit FLOAT,
cogs FLOAT,
total_sale )

--Write a SQL query to retrieve all columns for sales made on '2022-11-05:--

SELECT *
FROM retail_sales
WHERE sale_date = '2022-11-05';




--Write a SQL query to calculate the total sales (total_sale) for each category.:--

aWrite a SQL query to retrieve all transactions where the category is 'Clothing' and the quantity sold is more than 4 in the month of Nov-2022:--
SELECT 
  *
FROM retail_sales
WHERE 
    category = 'Clothing'
    AND 
    TO_CHAR(sale_date, 'YYYY-MM') = '2022-11'
    AND
    quantity >= 4
--Write a SQL query to calculate the total sales (total_sale) for each category.:--

SELECT category,SUM(total_sale) as total_sales,COUNT(*) as total_orders FROM retail_sales GROUP BY category;


--Write a SQL query to find the average age of customers who purchased items from the 'Beauty' category.:--


SELECT ROUND(AVG(age),2) as avg_age_beauty_category from retail_sales where category='Beauty';



--Write a SQL query to find all transactions where the total_sale is greater than 1000.:--
SELECT * FROM retail_sales where total_sale > 1000;

--Write a SQL query to find the total number of transactions (transaction_id) made by each gender in each category.:--

SELECT COUNT(transactions_id) as total_transactions,gender,category FROM retail_sales GROUP BY gender,category;

--Write a SQL query to calculate the average sale for each month. Find out best selling month in each year:--

SELECT year,month,avg_sales FROM (SELECT 
 EXTRACT(YEAR from sale_date) as year,
  EXTRACT(MONTH from sale_date) as month,
ROUND(CAST(AVG(total_sale) AS numeric), 2)as avg_sales,
RANK() OVER (PARTITION BY EXTRACT (YEAR FROM sale_date) ORDER BY AVG(total_sale) DESC) as rank
 
  
FROM retail_sales
GROUP BY 1,2 ) t1  where rank=1;

--ORDER BY  1,3 DESC;--
   

--Write a SQL query to find the top 5 customers based on the highest total sales--


SELECT customer_id,
SUM(total_sale) as total_sales  
FROM retail_sales
GROUP BY customer_id
ORDER BY total_sales DESC LIMIT 5 ;

--Write a SQL query to find the number of unique customers who purchased items from each category.:--


SELECT COUNT(DISTINCT(customer_id)) as unique_customers,
category 
FROM retail_sales
GROUP BY category;

--Write a SQL query to create each shift and number of orders (Example Morning <12, Afternoon Between 12 & 17, Evening >17):--
WITH hourly_sale 
AS (SELECT *,

CASE 
WHEN EXTRACT (HOUR FROM sale_time) < 12  THEN 'Morning' 

WHEN EXTRACT (HOUR FROM sale_time) BETWEEN 12 AND 17  THEN 'Afternoon' 
ELSE   'Evening'
END as shift 
FROM retail_sales
)

SELECT shift,COUNT(transactions_id) FROM hourly_sale GROUP BY shift;




--END--







